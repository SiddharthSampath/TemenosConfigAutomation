#********************************************************************
# TAFJ Main Configuration file
# 
# The special tag <...> will be substituted by the values 
# specified before.
#********************************************************************

#********************************************************************
# 
# Directories
#
#********************************************************************
tafj.home= C:\T24_DEV\Temenos\TAFJ
temn.tafj.policy.file         = <tafj.home>/conf/TAFJ.policy

# Specify the BASIC sources directories
# You can specify multiple directory, separated by
# ':' or ';' (eg /home/t24/T24_BP;/home/t24/LOCAL_BP))
#
#temn.tafj.directory.basic     = C:\T24_DEV\Temenos\TAFJ\samples\basic;C:\T24_DEV\Temenos\TAFJ\appserver\basic\TAFJ.BP;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\EB;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\SE;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\DX;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\ST;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\AC;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\SY;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\SC;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\AM;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\DI;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\WR;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\ST;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\DE;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\SP;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\MF;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\USLEND;C:\T24_DEV\Temenos\T24\eclipse\DEV-WorkSpace\LI;
 temn.tafj.directory.basic     = C:\T24_DEV\Temenos\TAFJ\samples\basic;C:\T24_DEV\Temenos\TAFJ\appserver\basic\TAFJ.BP;C:\T24_DEV\Temenos\T24\eclipse\201911-WorkSpace\EB;C:\T24_DEV\Temenos\T24\eclipse\201911-WorkSpace\SC;C:\T24_DEV\Temenos\T24\eclipse\201911-WorkSpace\DX;
# Specify the Insert BASIC sources directories
# You can specify multiple directory, separated by
# ':' or ';' (eg /home/t24/INSERT;/home/t24/INSERT_MOD) 
#
temn.tafj.directory.insert        =  C:\T24_DEV\Temenos\T24\lib\t24lib

# Specify where the java files will be generated 
# by the compiler
#
temn.tafj.directory.java= C:\T24_DEV\Temenos\TAFJ\data\201911\java

# Specify where the classes files will be generated 
# by the compiler
#
temn.tafj.directory.classes= C:\T24_DEV\Temenos\TAFJ\data\201911\classes

# Specify the Precompile classes directories
# You can specify multiple directory, separated by
# ':' or ';' (eg /home/t24/lib;/home/t24/FT)
#
temn.tafj.directory.precompile= C:\T24_DEV\Temenos\T24\lib\t24lib

#********************************************************************
# 
# Database setup
#
#********************************************************************

# URL that describes database connection, 
# ex.  oracle:          jdbc:oracle:thin:@<host_or_ip>:1521:<db_name>
# ex.  db2:             jdbc:db2://<host_or_ip>:50000/<db_name>
# ex.  ms-sql:          jdbc:sqlserver://<host_or_ip>:1433;databaseName=<db_name>;integratedSecurity=true
# ex.  H2:              jdbc:h2:tcp://<host_or_ip>/<db_name>
# ex.  H2(Embedded):    jdbc:h2:<path_to_my_db>
#
temn.tafj.jdbc.url= jdbc:h2:tcp://localhost/T24;DB_CLOSE_ON_EXIT=FALSE;MODE=Oracle;TRACE_LEVEL_FILE=0;TRACE_LEVEL_SYSTEM_OUT=0;FILE_LOCK=NO;IFEXISTS=TRUE;CACHE_SIZE=8192


# Class that describes the specific Driver for a database, 
# ex. oracle:             oracle.jdbc.driver.OracleDriver
# ex. db2:                com.ibm.db2.jcc.DB2Driver
# ex. ms-sql:             com.microsoft.sqlserver.jdbc.SQLServerDriver
# ex. H2:                 org.h2.Driver
#
temn.tafj.jdbc.driver= org.h2.Driver

temn.tafj.jdbc.username= t24
temn.tafj.jdbc.password= t24

#********************************************************************
# 
#  Read Only Database Resources
#
#********************************************************************
#
# Comma seperated list of URLs or dataSourceNames.  Use one or the other but not both.  If temn.tafj.jdbc.ro.urls used, then fill out 
# temn.tafj.jdbc.ro.drivers, temn.tafj.jdbc.ro.usernames, temn.tafj.jdbc.ro.passwords as well.  temn.tafj.jdbc.ro.dataBaseLinks
# should be filled out in either case, and should match up with either the url or dataSourceName of the read-only database
# Database links are required in the parsing of urls for the dimensional database.  For $DIM files, they aren't actually used.
# See the documentation for more information.
#
#  Datasource names are mapped in ejb descriptor like the below in the TAFJEE_EAR.ear file.       
#         <resource-ref>
#             <res-ref-name>jdbc/t24RODataSource</res-ref-name>
#             <res-type>javax.sql.DataSource</res-type>
#             <jndi-name>java:/jdbc/t24RODS</jndi-name>
#         </resource-ref>
#
# Example of a standalone TAFJ install not using an app-server
# ------------------------------------------------------------
# temn.tafj.jdbc.ro.urls=jdbc:oracle:thin:@<host_or_ip>:1521:<read_only_db_name1>,jdbc:oracle:thin:@<host_or_ip>:1521:<read_only_db_name2>
# temn.tafj.jdbc.ro.drivers=oracle.jdbc.driver.OracleDriver,oracle.jdbc.driver.OracleDriver
# temn.tafj.jdbc.ro.usernames=myuser1,myuser2
# temn.tafj.jdbc.ro.passwords=mypass1,mypass2
# temn.tafj.jdbc.ro.dataBaseLinks     =read_only_db_name1_db_link,read_only_db_name2_db_link
#
# Uncomment the following lines to utilize a TAFJ Read-only datasource name t24RODS that is already defined in the TAFJEE_EAR.ear file.
#   More than one RO datasource requires manipulation of the ear file.  This assumes that there is a database link named TAFJRO in the transactional db.
#   Database links are required in the parsing of urls.  For $DIM files, they aren't actually used.  See the documentation for more information.
# temn.tafj.jdbc.ro.dataSourceNames   =java:comp/env/jdbc/t24RODataSource
# temn.tafj.jdbc.ro.dataBaseLinks     =TAFJRO
#

temn.tafj.jdbc.ro.urls            =
temn.tafj.jdbc.ro.drivers         =
temn.tafj.jdbc.ro.usernames       =
temn.tafj.jdbc.ro.passwords       =
temn.tafj.jdbc.ro.dataBaseLinks   =


#********************************************************************
# 
#  Database Specific setup
#
#********************************************************************

# Use the MERGE statement instead of UPDATE/INSERT for XML Schema 
#
temn.tafj.jdbc.write.use.merge= false

# Use the MERGE statement instead of UPDATE/INSERT for NO XML Schema and NO XML Schema work 
#
temn.tafj.jdbc.write.use.merge.no.xml  = true

# Define if the database has been converted in UTF8 or not.
# This property is only valid for the TAFC database RDBMS 
#
temn.tafj.jdbc.jbase.utf8= true

# Dict Tables are CLOB or BLOB ?
# When running on a Database having been create by the jBase Export tool or DBUpdate, there are BLOB
# When the Database has been created with DBImport, there are CLOB
# Default is CLOB
#
temn.tafj.jdbc.default.dict.type= CLOB

# Make use of TRUNCATE instead of DELETE in case of CLEAR-FILE Statements 
# Setting the below to true will enable the TRUNCATE. Default is false and use DELETE 

temn.tafj.db.use.truncate.for.clearfile = false 

#
# Cache the dictionary items?  To be used only in a single JVM environment, ie. do not use in multi-appserver environment
#

temn.tafj.runtime.use.cache.dict.item      = false


#
# Cache batch writes?  Only applies to tables configured this way.  See TAFJ Caching documentation.
#

temn.tafj.runtime.use.batch.write          = false

# Use External caching services?  See $TAFJ_HOME/doc/TAFJCache.pdf to set up correctly 
#

temn.tafj.runtime.use.external.caching      = false


# Provider of external caching services.  This overriders caching provider specified in the 
# caching.properties file.  Default is TAFJ Local Cache Factory.  See $TAFJ_HOME/doc/TAFJCache.pdf to set up correctly for different providers 
# Providers: Coherence use => com.tangosol.coherence.jcache.CoherenceBasedCachingProvider 
# Providers: Jboss use => org.infinispan.jcache.embedded.JCachingProvider 
# Providers: Websphere use => com.ibm.websphere.ObjectGridProvider 
# Providers: ApacheIgnite use => org.apache.ignite.IgniteProvider 
# Providers: Temenos (local cache only across one jvm) use => com.temenos.tafj.cache.TAFJLocalCacheFactory 
#

# temn.tafj.cache.external.caching.provider in tafj.properties overrides any in caching.properties.

temn.tafj.cache.external.caching.provider      = com.temenos.tafj.cache.TAFJLocalCacheFactory



# Override the ON ERROR clauses for READ/WRITE/DELETE and the ELSE clauses for TRANSTART/TRANSEND/TRANSABORT.
# In place of going back to T24 just exit the process and roll back the transaction and exit the session.
temn.tafj.jdbc.fail.immediate.on.db.error = false


#********************************************************************
# 
#  Oracle Database Specific setup
#
#********************************************************************

# How do we want to make the commit.
# Could be : IMMEDIATE | BATCH, WAIT | NOWAIT
# The faster is BATCH, NOWAIT, however, it could have unpredictable results.
# All tests have been passed with IMMEDIATE, NOWAIT.
# If this value is remed out, the database default will be used (IMMEDIATE, WAIT)
#

# For Oracle 11GR1
#temn.tafj.jdbc.commit.mode       = IMMEDIATE, NOWAIT

# For Oracle 11GR2 and 12c
temn.tafj.jdbc.commit.logging     = IMMEDIATE
temn.tafj.jdbc.commit.wait        = NOWAIT


#********************************************************************
# 
#  DB2 and DB2 zOS Database Specific setup
#
#********************************************************************

# DB2 page size, determines the max length of a VARCHAR column, default if property removed is 4096
# For 8K pages use 8128 bytes, for 16K pages use 16320 bytes and for 32K pages use 32670 bytes
#
temn.tafj.jdbc.db2.page.size = 32670

#********************************************************************
# 
#  DB2 zOS Database Specific setup
#
#********************************************************************

# Set the mode zOS if the database is DB2 on zOS
#
temn.tafj.jdbc.db2.zos.mode= false

# Set the default database name in DB2 on zOS
#
temn.tafj.jdbc.db2.zos.default.db= T24DB999

# Set the default tablsespace name in DB2 on zOS
#
temn.tafj.jdbc.db2.zos.default.tablespace= T24TS999

# Set the default stogroup name in DB2 on zOS
#
temn.tafj.jdbc.db2.zos.default.stogroup= T24STORE

# Set the default Buffer pool name in DB2 on zOS
#
temn.tafj.jdbc.db2.zos.default.bufferpool= BP32K2

# Used for dynamic table creation for zOS DB2, ie. CREATE TABLESPACE " + tableSpace + " IN " + ZOS_DEFAULT_DB + " " + ZOS_DEFAULT_TABLESPACE_PROPERTIES;
# Alternatively, set temn.tafj.jdbc.db2.zos.mode to false and let table be created in an autogenerated db and tablespace and let the DB2 dba worry about default properties...

temn.tafj.jdbc.db2.zos.default.tablespace.props =



#********************************************************************
# 
# Oracle to H2
#
#********************************************************************
temn.tafj.conversion.oracle.url         = jdbc:oracle:thin:@localhost:1521:#instanceName#
temn.tafj.conversion.oracle.user        = t24_test
temn.tafj.conversion.oracle.password    = t24_test

temn.tafj.conversion.h2.url             = jdbc:h2:tcp://localhost/#instanceName#;DB_CLOSE_ON_EXIT=FALSE
temn.tafj.conversion.h2.user            = t24
temn.tafj.conversion.h2.password        = t24

temn.tafj.conversion.nbthreads          = 4



#********************************************************************
#
# Compiler properties
#
#********************************************************************

# Flag to indicate if development is internal or not.
# This will spawn additional development rules validation
# if turned on.
#
temn.tafj.compiler.internal.development = true

# Maximum grammar level when compiling. The highest is 3.
#
temn.tafj.compiler.grammar.maxlevel       = 3

# Minimum grammar level. For example, if a program cannot be compiled in
# grammar 3, it will tried to be compiled in grammar 2, then 1 ...
# Setting this value higher than 0 will make the program to fail compiling 
# if it fails at the level specified. 
#
temn.tafj.compiler.grammar.minlevel           = 0

# Specify if the source must be generated with the BASIC line numbers.
# If set to false, no Debugger would be available.
#
temn.tafj.compiler.grammar.line.number        = true

# set encoding of the BASIC Source
# ex for zOS : temn.tafj.compiler.basic.encoding = IBM-1047
# default is ISO-8859-1
#temn.tafj.compiler.basic.encoding            = IBM-1047


# Generate traces (logger COMPILER) if a Program cannot be compiled with the 
# highest grammar level.
#
temn.tafj.compiler.grammar.warning.depreciation   = false

# Generate traces (logger COMPILER) if duplicates are found in EQUATE.
temn.tafj.compiler.grammar.warning.equate = false

# Accept any name for $INSERT file
#
temn.tafj.compiler.insert.name.any            = true

# Java package to be used when compiling a program.
#
temn.tafj.package                         = com.temenos.t24

# Options for the java compiler. These options 
# have to be the same than the javac command of the JDK
# This property is not used by the Eclipse plug-in builder
#
temn.tafj.compiler.javac.options          = -g:none -nowarn

# Options for java compiler. Generate class files that target a specified version of the VM.
# Class files will run on the specified target and on later versions, but not on earlier versions of the VM. 
#Valid targets are 1.6 / 1.7.  
# This property set the compliance option of java compiler 
temn.tafj.compiler.javac.compliance       = 1.7

# When compiling a JBC file, specify if we want to generate
# the java file or not. Note that we can generate the class 
# without generating the java. 
#
temn.tafj.compiler.generate.java         = false

# When asking for compilation, do we want to do the java compilation ?
# The obvious would be 'true', but in some cases, we could only want
# the java generation or nothing (just parsing)
#
temn.tafj.compiler.generate.class             = true

# When compiling, do we want to also put the classes in a jar file.
# This will obviously only work if we are generating the classes (see above)
# The jar name will be the name of the package with _ instead of .
# The jar location will be defined by the property 
# temn.tafj.compiler.generated.jar.dir
#
temn.tafj.compiler.generate.jar         = true
#
# Where should the jar be generated during compilation.
# default value is same as temn.tafj.directory.classes directory but in 
# "jars" instead of "classes"
#
temn.tafj.compiler.generated.jar.dir    = 

# When set to true enable compilation of new resources in eclipse
#
temn.tafj.compiler.eclipse.new.basic      = false

# Extensions the compiler will consider. If null, all types 
# or file will be accepted
#
temn.tafj.compiler.extensions         = .b;.component;.tut

# When set to true stop the compilation if an error append 
# This property is not used by the Eclipse plug-in builder
temn.tafj.compiler.exit.if.error          = false

# Eclipse basic editor When set to true file parsing won't be processed on each CR.
# To be used to speed up edition.
#Live code colorizer will be executed on save only.
#
temn.tafj.compiler.disable.cr.refresh = true

# Generate an error if variable is not properly initialised.
#
temn.tafj.compiler.force.variable.initialisation = true

#********************************************************************
#
# Component
#
#********************************************************************

# When compiling a .component file, where should we generate the 
# different files and the header for TAFC ?
# ** will be replaced by the component name with underscore instead of dot.
# example : compiling XX.Test.component will generate data in
# <tafj.home>/tafc_components/XX_Test/
# The path can be absolute or relative to the .component file.
#
#default : <tafj.home>/tafc_components/**
temn.tafj.compiler.tafc.component.dir = <tafj.home>/tafc_components/**

# When compiling a .component file, where should we generate the 
# different Enterprise artefacts ?
# ** will be replaced by the component name with underscore instead of dot.
# example : compiling XX.Test.component will generate data in
# ../../../build/XX_Test/generated/t24services/JBCAPI
# and ../../../build/XX_Test/generated/t24services/JBCInsert
# if not ending with *, everything will be generated in 
# ../../../build/XX_Test/generated/t24services/
# The path can be absolute or relative to the .component file.
# default : ../../../build/**/generated/t24services/*
#
temn.tafj.compiler.enterprise.component.dir = ../../../build/**/generated/t24services/*


#********************************************************************
#
# Filter on BASIC source
#
#********************************************************************

# Switch to enable the filters apply on the BASIC code
#
temn.tafj.compiler.filter.enable  = false

# name of filter separate by a coma
#
temn.tafj.compiler.filter.names       =


#********************************************************************
#
# Runtime parameters
#
#********************************************************************

# List the path / jars to consider at runtime.

#
# TAFJ Manage the classloader
# 1. <temn.tafj.directory.classes>
# 2. <temn.tafj.runtime.classpath>
# 3. <tafj.home>/ext
# 4. <temn.tafj.runtime.extended.classpath>
# 5. <temn.tafj.directory.precompile> 

# Specify the list of jars or directories to load in the classloader.
# Before <tafj.home>/ext
# 
temn.tafj.runtime.classpath                   = 

# Specify the list of jars or directories to load in the classloader.
# After <tafj.home>/ext
#
temn.tafj.runtime.extended.classpath      = 

# Specify what will be considered as the "current" directory (eg in an OPEN "." ...)
#
temn.tafj.runtime.directory.current           = <tafj.home>/UD
# By default all UD Tables is no UTF-8 encoding.
# you have to specify the codepage of UD tables
# Latin character ISO-8859-1, cp1252 or UTF-8
temn.tafj.runtime.ud.encoding             = cp1252

# Specify what is the COMO directory.
#
temn.tafj.runtime.directory.como          = <temn.tafj.runtime.directory.current>/&COMO&

# set the file encoding of the output file COMO
# ex for zOS : temn.tafj.runtime.como.encoding= IBM-1047
# default is ISO-8859-1
#
#temn.tafj.runtime.como.encoding          = IBM-1047

#Specify where is the &HOLD& directory when SETPTR is used with the HOLD option
#
temn.tafj.printer.directory.hold              = <temn.tafj.runtime.directory.current>/&HOLD&

# Directory where T24 TAFJ updates will be written to.
# This could be an appserver directory perhaps.
# A TAFJ update that updates TAFJ core will directly overwrite the jar.
temn.tafj.directory.updates                   = <tafj.home>/updates

# set the port range of the system or set to get it from the database
#
#ie : temn.tafj.runtime.port.range = 10-45,76,89,2,130-150
temn.tafj.runtime.port.range                = 

# set to true to get a unique port from the database
temn.tafj.runtime.port.database                = false

# set the timezone of the system
#
#ie : temn.tafj.runtime.timezone = Europe/London
temn.tafj.runtime.timezone                    = 

# set the locale language and country
#
temn.tafj.runtime.local                       = en_US

# Specify whether a "EXECUTE PHANTOM ..." will be a new process or
# a new Thread. In multiple CPU machines, a new process (true) could
# be more efficient.
#
temn.tafj.runtime.phantom.as.process      = true

#If the phantoms are executed as process, what JVM options to
#use to launch them.
#
temn.tafj.runtime.new.process.params      = -Xmx1024M -XX:MaxPermSize=256m

# Default precision when not specified.
#
temn.tafj.runtime.default.precision       = 13

# Rounding Mode for operands : HALF_UP(Default) (2.25 -> 2.3 and 2.24 -> 2.2)
# Possible values : HALF_DOWN, HALF_UP, HALF_EVEN, CEILING, FLOOR, UP
#
temn.tafj.runtime.rounding.mode               = HALF_UP

# Rounding Mode result : HALF_UP(Default) (2.25 -> 2.3 and 2.24 -> 2.2)
# Possible values : HALF_DOWN, HALF_UP, HALF_EVEN, CEILING, FLOOR, UP
#
temn.tafj.runtime.rounding.mode.result        = DOWN

# set to true if the runner is on a zOS LPar machine
# and it have to work in legacy mode
#
temn.tafj.runtime.zos.mode                    = false

# Define if, in case of exception, we are stopping the execution or
# just throwing the exception (in case of TAFJ is used like an API)
#
temn.tafj.runtime.exception.mode          = false

# When set to true a terminating session will be cleaned up.
# All locks released and the database connection closed. 
#
temn.tafj.runtime.clean.on.shutdown           = true

# By default data files loaded require manual authorization. 
# When set to true data are uploaded in $INAU table.
# When set to false data are uploaded directly in the LIVE table
temn.tafj.runtime.authorize.record            = true

# If set to false, any 'DEBUG' statement will be ignored.
#
temn.tafj.runtime.enable.debug                = true

# Performance :cache OPF 
#
temn.tafj.runtime.enable.cached.opf           = false

# Performance : internal java TAFJ System_getCache 
#
temn.tafj.runtime.use.cache.get               = false

# If set to false, data records changed in eclipse will not be loaded.
# into the database. by default the property is false .

temn.tafj.runtime.enable.data.records.load    = false


#********************************************************************
#
# Tests
#
#********************************************************************

Set the date of the system for all tests.
The format is dd/mm/yyyy
If left blank, the system date is used

temn.tafj.utf.default.date =

Set the time of the system for all tests.
The format is hh:mm:ss
If left blank, the system time is used

temn.tafj.utf.default.time =

# Should we generate jUnit kind of report for unitTests ?
#
# temn.tafj.utf.generate.results         = false
#
# Where should the UnitTests result be generated.
# Default value is same as temn.tafj.directory.classes directory but in 
# testResults directory#
temn.tafj.utf.results.directory           = 


#********************************************************************
#
# Code coverage
#
#********************************************************************

# Enable the Code Coverage of BASIC execution. 
# This feature will potentially slow down your runtime.
#
temn.tafj.runtime.enable.coverage           = false

# Host name or IP of where is cobertura server
#
temn.tafj.runtime.coverage.host             = localhost

# TCP port of the cobertura server is listening on
#
temn.tafj.runtime.coverage.port             = 7474


#********************************************************************
#
# TEC and logger API
#
#********************************************************************
#
# JMS Connection settings 
# used by the TEC Items logger (for Monitor) but also for all kind of 
# JMS Communication. Note that the specific 
#
# java.naming.factory.initial=org.jnp.interfaces.NamingContextFactory
# java.naming.factory.url.pkgs=org.jboss.naming
# java.naming.provider.url=localhost:1099

# Enable the Logger api for TEC Items recording using JMS (used by T24Monitor)
#
temn.tafj.runtime.enable.logger.api.jms       = false

# Enable the Logger api for TEC Items (used by T24Monitor)
#
temn.tafj.runtime.enable.logger.api           = true

# Enable TEC Items recording
#
temn.tafj.runtime.disable.tec                 = false


#********************************************************************
#
# JIMI
#
#********************************************************************

# Specify if jimi is on, off or can be switched
# 1 : On, can be changed programatically 
# 0 : Off, can be changed programatically 
#-1 : Off CANNOT be changed programatically.
#
temn.tafj.runtime.jimi.on                 = 0

# Specify what directory will contains the jimi reports
#
temn.tafj.runtime.directory.jimi          = <temn.tafj.runtime.directory.current>

# Specify whether we want to append on existing trace files or create 
# a new file every times we start jimi.
#
temn.tafj.runtime.jimi.append             = false

# The first index when using the FILEIO option
#
temn.tafj.runtime.jimi.image.index            = 1

# To switch off jimi logs (session/jLogs) in runtime change the below property to false in customer sites

temn.tafj.generate.session.log             = true


#********************************************************************
#
#  TAFJ Monitor
#
#********************************************************************
# Enable the TAFJMonitorSession
#
temn.tafj.runtime.session.monitor.enable        =         true

# Host name or IP of where is the TAFJMonitorSession
#
temn.tafj.runtime.session.monitor.host            =       localhost

# TCP port of the TAFJMonitorSession 
#
temn.tafj.runtime.session.monitor.port            =       8377


#********************************************************************
#
#  TAFJ Locking mechanism
#
#********************************************************************
# Tafj locking mode
# Could be : JDBC | ORCL | MSQL | PROC | PROCHASH | MEM | DATABASE | MEMORYGRID 
# JDBC : locks managed in database uses LOCK_RECORDS table.
# ORCL : locks managed in database using DBMS_LOCK Oracle specific package. Recommended solution for Oracle.
# MSQL : locks managed in database using DBMS_LOCK MS-SQL specific package. Recommended solution for MS-SQL.
# PROC : TAFJ lock manager, external process, server accepting client connections on a port.
# PROCHASH : TAFJ lock manager, external process, server accepting client connections on a port (for performance).
# MEM : Memory mode version of the TAFJ lock manager to be used only in a single application server.
# DATABASE : Use database locks of the underlying database in conjunction with the secondary lock manager for non-existing records.
# MEMORYGRID : Memory locking across a datagrid using application server stack caching mechanism.  Currently only Coherence supported.

temn.tafj.locking.mode= JDBC

temn.tafj.jdbc.db.locking.secondary.lockmanager = JDBC

# Host name or IP of where is the tLockManager daemon
#
temn.tafj.locking.hostname= 127.0.0.1

# TCP port of the tLockManager daemon is listening on
#
temn.tafj.locking.port= 7425

#
# Host name or IP of where is the tLockManager backup daemon
#
temn.tafj.locking.backup.hostname             = 

#
# TCP port of the tLockManager backup daemon is listening on
#
temn.tafj.locking.backup.port                 = 

# Bring the current call stack over to the LockManager?
#
temn.tafj.locking.callstack= false

# if we want to override the URL as unique key for the DBInstance
# we have to give a name here (eg myDatabase). This is usefull
# if the DBServer has multiple adapters. The URL's are different
# but this is still the same Database.
# only for PROC and PROCHASH
#
temn.tafj.locking.name= 



#********************************************************************
#
# T24 Collector
#
#********************************************************************
#
# Location of the T24Collector for monitoring and managing.
# Default value : localhost:4444 registration canceled if value empty.
#
temn.tafj.t24.collector                       = localhost:4444


#********************************************************************
#
# Packaging
#
#********************************************************************
#
# Specify the path to F.PGM.DATA CONTROL file
#
temn.tafj.pgm.data.control                    =

# Specify the default jar file name while using component splitting.
# mention only jar name without '.jar' extension 
#
temn.tafj.default.jar.name                = 


# Specify the Temp.Release path for tIntegrate.bat/sh
#
temn.tafj.eb.temp.release                 = 


#********************************************************************
#
# Basic Replacement
#
#********************************************************************
#
# These properties are shortcuting the CALL statement to invoke
# Directly a javaClass.
# The Parameters are all jVar and the count must match the
# Basic equivalent.
# The count must not be discountinuous. This means that if
# there is ...1, ...2, ...4 without ...3, ...4 will not be read and thus ignored.
#
temn.tafj.directory.ext                   = <tafj.home>/ext

temn.tafj.migration.basic.1               = EB.CREATE.VIEW
temn.tafj.migration.java.1                = com.temenos.tafj.basic.EbCreateView

temn.tafj.migration.basic.2               = EBS.CREATE.FILE
temn.tafj.migration.java.2                = com.temenos.tafj.basic.EbsCreateFile


#********************************************************************
#
# Printer
#
#********************************************************************
#
#
# Default number of printer channels available, please increase if more is required by T24
#
temn.tafj.printer.num.channels = 3
#
#
# Properties if HOLD handled on another server.  These are for the SFTP plugin.
temn.tafj.spooler.iohandler.sftp.host                = 
temn.tafj.spooler.iohandler.sftp.port                = 
temn.tafj.spooler.iohandler.sftp.user                = 
temn.tafj.spooler.iohandler.sftp.password            = 
temn.tafj.spooler.iohandler.sftp.dir                 = 
# 
# Printer list
# This list has been generated during the setup. You can modify it at any moment to reflect any
# change to the printer list.
# If the Channel 1 is missing (or remed-out), it will be defaulted to the default printer (if any)
# of your operating system.
#

temn.tafj.channel.name.0 	= PRN0

temn.tafj.driver.name.0 	= PRN0
temn.tafj.driver.device.0	= \\bng-app01\BNGPRT2_AllStaff
temn.tafj.spooler.iohandler.0	= FILEHANDLER
temn.tafj.driver.class.0 	= com.temenos.tafj.jlp.drivers.jPrinterDriver



#********************************************************************
#
# Appserver
#
#********************************************************************
# 
# Default appserver name
# When running in appserver mode the MBean server will be queried to get the registered domain and
# setup the application server provider. It's used to do specific DB parsing (XML - CLOB) depending on the provider.
# If the appserver could not be infered a log error will report it, in that case only this property should be used 
# to determine the appserver provider. 
# Supported values are JBOSS - WEBLO - WAS
temn.tafj.default.appserver.name            =
#
# new property added.
#
temn.tafj.jdbc.commit.mode= null
